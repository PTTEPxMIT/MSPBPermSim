import festim as F
import fenics as f
import numpy as np
import h_transport_materials as htm
import matplotlib.pyplot as plt

t_substrate = 1e-03

my_model = F.Simulation()

my_model.mesh = F.MeshFromVertices(np.linspace(1e-6, t_substrate, num=50))

diffusivities = htm.diffusivities.filter(material="316l_steel").filter(author="reiter").filter(year=1996)
diffusivity = diffusivities[0]
D_0 = diffusivity.pre_exp.magnitude
E_D = diffusivity.act_energy.magnitude

S = htm.solubilities.filter(material="316l_steel").filter(author="reiter").filter(year=1996)[0]
S_0 = S.pre_exp.magnitude
E_S = S.act_energy.magnitude

# D_0, E_d source: "Reiter 1996"
steel_mat = F.Material(
    id=1,
    D_0=D_0, E_D=E_D,
    S_0=S_0, E_S=E_S
    # D_0=1,
    # E_D=1
)
my_model.materials = F.Materials([steel_mat])


my_model.T = 600

P_up = 1e4  # Pa

left_bc = F.SievertsBC(
    surfaces=1,
    S_0=steel_mat.S_0,
    E_S=steel_mat.E_S,
    pressure=P_up
)

right_bc = F.DirichletBC(
    field="solute",
    surfaces=2,
    value=0
)

my_model.boundary_conditions = [left_bc, right_bc]

my_model.settings = F.Settings(
    absolute_tolerance=1e-1,
    relative_tolerance=1e-9,
    final_time=1e5  # s
    )

my_model.dt = F.Stepsize(initial_value=10,
                         stepsize_change_ratio = 1.1)

folder = 'results'
derived_quantities = F.DerivedQuantities([F.HydrogenFlux(surface=2)], show_units=True)
txt_export = F.TXTExport(
    field='solute',
    filename=folder + '/mobile.txt'
)

my_model.exports = [derived_quantities, txt_export]
my_model.initialise()

my_model.run()

times = derived_quantities.t
computed_flux = derived_quantities.filter(surfaces=2, fields="solute").data
computed_flux = -np.array(computed_flux)

plt.figure()

plt.plot(times, computed_flux, label="hydrogen flux H/m^2/s")

plt.xscale("log")
plt.legend()
plt.xlabel("Time (s)")
plt.ylabel("Permeation flux (H/m2/s)")
plt.show()

